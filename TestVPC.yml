#VPC作成
# - 入力パラメータ
# - 作成するリソース
#   - VPC
#   - インターネットゲートウェイ、アタッチ
#   - パブリックサブネット、プライベートサブネット
#   - パブリックサブネット用ルートテーブル、ルート、アタッチ
#   - プライベートサブネット用ルートテーブル、ルート、アタッチ

AWSTemplateFormatVersion: 2010-09-09
Description: create vpc and subnet

#CIDRパラメータ入力用
Parameters:
  CidrBlock:
    Description: type the CidrBlock.
    Type: String
    Default: 10.1.0.0/16
  
Resources:
#テスト環境用のVPC作成
  TestVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: "default"
      Tags: 
        - Key: environment
          Value: test
        - Key: Name
          Value: test-vpc

#テスト環境用VPCインターネットゲートウェイ作成
  TestInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: environment
          Value: test
        - Key: Name
          Value: test-igw

#テスト環境用VPCにインターネットゲートウェイをアタッチ
  TestInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref TestInternetGateway
      VpcId: !Ref TestVPC

#パブリックサブネット作成
  TestPublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      #GetAtt関数でTestVPCのCIDRを取得し、Cidr関数で/24のサブネットを３つ作成し、さらに1番目のサブネットを指定(10.1.0.0/24)
      CidrBlock: !Select [0, !Cidr [!GetAtt TestVPC.CidrBlock, 3, 8]]  
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: environment
          Value: test
        - Key: Name
          Value: test-public-subnet-1a
      VpcId: !Ref TestVPC
      
#プライベートサブネット作成
  TestPrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      #GetAtt関数でTestVPCのCIDRを取得し、Cidr関数で/24のサブネットを３つ作成し、さらに2番目のサブネットを指定(10.1.1.0/24)
      CidrBlock: !Select [1, !Cidr [!GetAtt TestVPC.CidrBlock, 3, 8]]  
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: environment
          Value: test
        - Key: Name
          Value: test-private-subnet-1a
      VpcId: !Ref TestVPC

#パブリックサブネット用ルートテーブル作成
  TestPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: environment
        Value: test
      - Key: Name
        Value: test-public-routetable
      VpcId: !Ref TestVPC

#プライベートサブネット用ルートテーブル作成
  TestPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: environment
        Value: test
      - Key: Name
        Value: test-private-routetable
      VpcId: !Ref TestVPC

#パブリックサブネット用ルート作成
  TestPublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref TestInternetGateway
      RouteTableId: !Ref TestPublicRouteTable

#ルートテーブルをパブリックサブネットにアタッチ
  TestPublicRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref TestPublicRouteTable
      SubnetId: !Ref TestPublicSubnet1a

#ルートテーブルをプライベートサブネットにアタッチ
  TestPrivateRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref TestPrivateRouteTable
      SubnetId: !Ref TestPrivateSubnet1a

#VPC,Subnet IDを外部にアウトプット
Outputs:
  TestVPC:
    Description: Information about the "TestVPC"
    Value: !Ref TestVPC
    Export: 
      Name: !Sub ${AWS::StackName}-VpcID
  
  TestPublicSubnet1a:
    Description: Information about the "TestPublicSubnet1a"
    Value: !Ref TestPublicSubnet1a
    Export: 
      Name: !Sub ${AWS::StackName}-PublicSubnetID
  
  TestPrivateSubnet1a:
    Description: Information about the "TestPrivateSubnet1a"
    Value: !Ref TestPrivateSubnet1a
    Export: 
      Name: !Sub ${AWS::StackName}-PrivateSubnetID